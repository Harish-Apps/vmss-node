name: Build and Deploy to Azure VMSS

# This workflow demonstrates how to build a Node.js application and deploy it to
# an Azure Virtual Machine Scale Set using the Custom Script Extension.  The
# workflow performs the following steps:
#   * Checks out the repository.
#   * Caches and installs Node.js dependencies.
#   * Optionally runs tests (you can add your own commands here).
#   * Logs in to Azure using service principal credentials stored in repository
#     secrets (`AZURE_CLIENT_ID`, `AZURE_TENANT_ID`, `AZURE_SUBSCRIPTION_ID`).
#   * Invokes `az vmss extension set` with `--force-update` to download and
#     execute the `install_node_app.sh` script on each VMSS instance.  This
#     process updates the Node.js application and restarts it via systemd.
#
# To use this workflow you must:
#   * Create an Azure AD service principal with sufficient privileges and store
#     its client ID, tenant ID, and subscription ID as repository secrets.
#   * Set the RESOURCE_GROUP and VMSS_NAME environment variables below to match
#     your deployment created by `create_vmss.sh`.
#   * Host `install_node_app.sh` in your repository under `vmss_sample/` so the
#     raw GitHub URL is reachable by the VMSS instances.

on:
  push:
    branches:
      - main

env:
  # Name of the resource group created by create_vmss.sh
  RESOURCE_GROUP: myVmssResourceGroup
  # Name of the VM scale set created by create_vmss.sh
  VMSS_NAME: myVmssSample

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd vmss_sample
          npm ci

      - name: Run tests (placeholder)
        run: |
          echo "No tests configured."

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Update VMSS application via Custom Script Extension
        uses: azure/cli@v2
        with:
          inlineScript: |
            set -euo pipefail
            # Construct the raw GitHub URL for the install script.  The
            # repository is referenced via github.repository which resolves to
            # <owner>/<repo>.  The script must be committed to the default
            # branch (main) so that the URL resolves correctly for the VMs.
            SCRIPT_URL="https://raw.githubusercontent.com/${{ github.repository }}/main/vmss_sample/install_node_app.sh"

            echo "Updating VM scale set using script: $SCRIPT_URL"

            az vmss extension set \
              --publisher Microsoft.Azure.Extensions \
              --version 2.0 \
              --name CustomScript \
              --resource-group "$RESOURCE_GROUP" \
              --vmss-name "$VMSS_NAME" \
              --force-update \
              --settings "{\"fileUris\": [\"$SCRIPT_URL\"], \"commandToExecute\": \"bash install_node_app.sh\"}"

            echo "Deployment triggered.  The VMSS will download and run the latest application code."